#!/bin/bash
# Requires curl

# Run disk, app and RAM checks repeatedly
# on some hosts over ssh.
# If app is down or a number is too low then send emails.

# Note: you must ensure that the 'monitor' user exists
# on each host and can log in over ssh.

if [[ ! -f ./config ]]; then
  echo "Create config file (use config.default as template)"
  exit 1
fi

sendgmail(){
  # $emailbody = body of email
  # $emails = recepints
  for emailaddr in "${emails[@]}"
  do

    rm mail.txt
    touch mail.txt
    echo 'From: "alerter" <alerter@scripto.me>' >> mail.txt
    echo 'To: "user" <$emailaddr>'              >> mail.txt
    echo "Subject: $emailbody"                  >> mail.txt
    echo ''                                     >> mail.txt
    echo "$emailbody"                           >> mail.txt
    echo "Sending the following email text:"
    echo "$emailbody"

    echo "Sending to $emailaddr.."
    curl --url "smtps://smtp.gmail.com:465" --ssl-reqd \
         --mail-from "$gmailuser" --mail-rcpt "$emailaddr" \
         --upload-file mail.txt --user "$gmailuser:$gmailpass" --insecure
  done
}

monitor() {
  source ./config
  cat config check >configcheck
  chmod u+x configcheck
  for hst in "${hosts[@]}"
  do
    IFS=$'\n'
    stats=( $(sshpass -p $remotepass ssh $remoteuser@$hst 'bash -s' < configcheck 2>/dev/null) )
    declare -i perc_disk_free
    declare -i mb_ram_free
    perc_disk_free=${stats[0]}
    mb_ram_free=${stats[1]}
    app_running=${stats[2]}
    echo "Stats for $hst: df=$perc_disk_free ramfree=$mb_ram_free app running=$app_running"
    if (( perc_disk_free < min_disk_free )); then
      emailbody="Low disk space on $hst: only $perc_disk_free"
      echo "emailbody is " $emailbody
      sendgmail
    fi
  done
  sleep 300
}

monitor
